name: Deploy to Server using rsync

on:
  push:
    branches:
      - main # Mude para 'master' ou sua branch principal, se necessário

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Opcional: Etapa de Build ---
      # Se seu projeto precisa ser compilado/buildado (ex: Node.js, React, Java, etc.)
      # Descomente e ajuste a seção abaixo conforme necessário.
      # Exemplo para um projeto Node.js:
      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '20' 
      # - name: Install dependencies and build
      #   run: |
      #     npm ci
      #     npm run build
      # --- Fim da Etapa de Build Opcional ---

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy files via rsync
        env:
          SSHPASS: ${{ secrets.PASS }}
          SSH_USER: ${{ secrets.USER }}
          SSH_HOST: ${{ secrets.HOST }}
          REMOTE_PATH: "/home/storage/4/ab/f9/k201/public_html" # Caminho do seu arquivo original
          # SSH_PORT_NUMBER: ${{ secrets.SSH_PORT_NUMBER }} # Descomente e defina o segredo se usar uma porta diferente da 22
        run: |
          # A porta padrão é 22. Se SSH_PORT_NUMBER estiver definido e não for vazio, use-o.
          SSH_PORT_OPTION=""
          if [ -n "$SSH_PORT_NUMBER" ]; then
            SSH_PORT_OPTION="-p $SSH_PORT_NUMBER"

          fi
          
          echo "Starting rsync..."
          # Usar sshpass para fornecer a senha para rsync via SSH
          # ARGS: -avzr --delete (archive, verbose, compress, recursive, delete no destino arquivos não existentes na origem)
          # SOURCE: "./" (diretório raiz do checkout; mude para "dist/" ou "build/" se tiver etapa de build)
          # EXCLUDE: padrões para excluir
          sshpass -e rsync -avzr --delete \
            --exclude='.git*' \
            --exclude='.github*' \
            --exclude='node_modules/' \
            -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $SSH_PORT_OPTION" \
            ./ ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.REMOTE_PATH }}/
          echo "rsync completed."

      - name: Post-deployment commands (Copy app_local.php)
        if: success()
        uses: appleboy/ssh-action@v1.0.3 
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASS }}
          # port: ${{ secrets.SSH_PORT_NUMBER }} # Descomente se necessário
          script: |
            SOURCE_APP_LOCAL="/home/storage/4/ab/f9/k201/app_local.php"
            TARGET_CONFIG_DIR="/home/storage/4/ab/f9/k201/public_html/config"
            TARGET_APP_LOCAL="${TARGET_CONFIG_DIR}/app_local.php"

            echo "Starting post-deployment: Copying app_local.php..."
            
            # Verificar se o diretório de destino da configuração existe
            if [ ! -d "$TARGET_CONFIG_DIR" ]; then
              echo "ERROR: Target configuration directory $TARGET_CONFIG_DIR does not exist. Creating it..."
              mkdir -p "$TARGET_CONFIG_DIR"
              if [ $? -ne 0 ]; then
                echo "ERROR: Failed to create target configuration directory $TARGET_CONFIG_DIR."
                exit 1
              fi
              echo "Target configuration directory $TARGET_CONFIG_DIR created."
            fi

            echo "Looking for app_local.php at $SOURCE_APP_LOCAL"
            if [ -f "$SOURCE_APP_LOCAL" ]; then
              echo "Found app_local.php at $SOURCE_APP_LOCAL. Copying to $TARGET_APP_LOCAL..."
              cp "$SOURCE_APP_LOCAL" "$TARGET_APP_LOCAL"
              if [ $? -eq 0 ]; then
                echo "Successfully copied app_local.php to $TARGET_APP_LOCAL."
              else
                echo "ERROR: Failed to copy app_local.php from $SOURCE_APP_LOCAL to $TARGET_APP_LOCAL."
                exit 1
              fi
            else
              echo "WARNING: Source file $SOURCE_APP_LOCAL not found. Cannot copy app_local.php."
              # Decida se isso deve ser um erro fatal ou apenas um aviso
              # exit 1 # Descomente para falhar o job se o arquivo for obrigatório
            fi
            
            echo "Post-deployment: app_local.php copy process completed."
            echo "Deploy completed successfully!!"
